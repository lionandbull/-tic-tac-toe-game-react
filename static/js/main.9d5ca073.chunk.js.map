{"version":3,"sources":["index.js"],"names":["determineWinner","squares","lines","i","length","_lines$i","Object","_Users_wadeliu_my_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_5__","a","b","c","Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","className","onClick","value","Board","_this","this","renderSquare","React","Component","Game","_this2","_Users_wadeliu_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_wadeliu_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_wadeliu_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","history","Array","fill","stepNumber","xIsNext","slice","current","console","log","setState","concat","step","status","_this3","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d5ca073.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction determineWinner(squares){\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction Square(props) {\n    return (\n      <button \n        className=\"square\" \n        onClick={props.onClick}\n      >\n        {props.value}\n      </button>\n    );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square \n        value = {this.props.squares[i]}\n        onClick = {() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    console.log(history);\n    console.log(current);\n    const squares = current.squares.slice();\n    if (determineWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = determineWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move:\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    }\n    else{\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}